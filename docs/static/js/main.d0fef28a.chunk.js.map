{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifList.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifList","category","a","url","encodeURI","fetch","resp","json","data","gifList","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,aAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,IACdO,QAAQC,IAAI,mBAId,SACE,uBAAOC,KAAK,OAAOC,MAAOX,EAAYY,SAbtB,SAACT,GACnBF,EAAeE,EAAEU,OAAOF,a,+BCNbG,EAAU,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAClBC,EADkB,gDAC6BC,UAAUH,GADvC,+DAELI,MAAMF,GAFD,cAElBG,EAFkB,gBAGHA,EAAKC,OAHF,uBAGjBC,EAHiB,EAGjBA,KACDC,EAAUD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARd,kBAWjBM,GAXiB,4CAAH,sDCEZO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACtC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAExB,ECH0B,SAAEA,GAC5B,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACTxB,EAAYC,GACTwB,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAECqB,EDb0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACE,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,oCACZ,qBAAKA,UAAU,YAAf,SACIH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aETnCgB,EAAgB,WAC3B,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KACA,OACE,gCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAAgB,uBAC5C,6BACI6C,EAAWnB,KAAI,SAAAoB,GAAG,OAAK,cAAC,EAAD,CAAmB7B,SAAU6B,GAAfA,Y,MCL/CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0fef28a.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('Samuray X');\r\n  const handleInput = (e) => { //***** Handle *****\r\n    setInputValue( e.target.value );\r\n  }\r\n  const handleSubmit = (e) =>{ //***** Handle *****\r\n    e.preventDefault(); //Prevenir el refresco del navegador\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories( cats => [inputValue, ...cats] );\r\n      setInputValue('');\r\n      console.log('Submit hecho!');\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInput} />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = { //Exigir setCategories como funciÃ³n!!!\r\n  setCategories: PropTypes.func.isRequired,\r\n}","  export const getGifList = async(category) =>{\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=HJAJqYBURp1BG4u0dy9QjVETMNiVb6BT`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifList = data.map(gif => {\r\n      return {\r\n        id: gif.id,\r\n        title: gif.title,\r\n        url: gif.images?.downsized_medium.url,\r\n      }\r\n    });\r\n    return(gifList);\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifList';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n  //Custom Hook\r\n  const { data:images, loading } = useFetchGifs( category ); \r\n\r\n  return (\r\n    <>\r\n    <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n    {loading && <p className=\"animate__animated animate__flash\">Cargando resultados...</p>}\r\n    <div className=\"card-grid\">\r\n      { images.map(gif => <GifGridItem key={gif.id} {...gif} />) }\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifList } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({ //Estado inicial\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => { //Una vez, excepto si cambia category\r\n    getGifList( category )\r\n      .then( imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      })\r\n    }, [category]);\r\n\r\n  return state; // { data:[...], loading: false };\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n  return (\r\n    <div>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategories={setCategories}/><hr/>\r\n      <ol>\r\n        { categories.map(cat => (<GifGrid key={cat} category={cat} />)) }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}